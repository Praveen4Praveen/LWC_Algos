from kyber.kyber import Kyber512
import os
from cryterion import cryterion
import hashlib

RecieverPublicKey = b'\xd0\x94\x8aU\xa5EC,q\xe4\xb2a\xc0\xf3y\x1b\x1aJf\xe1\n\x17\x891\xb6\xb5*\x9e\x80\x14Key\xe1\xf7\x9cY\xd2\x8a\x08\xe3\x82]\xf6\xa9\xe9\xda\x91\xe5\xc7L\xf3\xb8\x85\xb5\x9a+\x1f\xf88K\xa1>\xc1\x8b-.\x17\x90\xedF\xc8\x08\xc5h&\x8c\x8a\xab\xe8\xc8\x93\x93\xa1l\xc4\xb8\x94\x8a\x80\xaa\xb1s\x1c\x04~\xb6\xa0\x8a\xc8x\x9dksg\xbb\xf3\x05\x1c\x12\xaf\x96\xb5\x89\xcf\xa1\x9bKQy\xf0\xd3\x87\xf7\xe32\xa4\xf6\xcbd\x893\xc6{#\x98(\x98\xa6lLU\xac\xb6d\xb3e\x00\x98,\x19\xb6ae\x06-\\\x96x\xcf\xebS\xe6@|\x85\xa5\x12>\x18}\xa9\x99\x82I\xbc\xb0\x83\xe7b\x8b\xa8Yu*\xbcEX\x84\x17\x86\x90{\xc2\xb6\xb4\xe9\x04,\x8a\x97K\xf3\x93\x85\xd7\x18\x07\xf3Y\xa6+\x16\x9c\xe8\x93\xc778$q\xb7\xae\xabtI\xfa8%\xc0^q\xd5\xc0\x86\xe6Q\x16Y<\x87\x13\x06[\xcb\x94?\xf4\xc4\xacF(\x0c\x10\x18`Hp\xf55\xc7\x19<\x9f\n\xa3\x08S\xfc_\xc2\x05\x9e\nd-\xea\x14\x8f\xe9s.\x9e\x87\xb2\xb6\x1a#@\xfa\x12\xed\x04\xcb\x8a\xb6\x0b\xe1\x1ca\x17\xa0\t\x04B\xc2\x1f\x96Uq\xdc\xc1\xf5\x85.\xfe\xd3\x92\x81\xc7\xbd\x97V6u3Z@\x93\x85\xd8|o\xe1\xd5\xa6\xb1\x10\x07X\x02\xab\xa7\x99,J\x10_7\xd7\xa1\x97\xc9\xb2\x18\xa3\x0fl\xbc\xc3Q\xd8\x0f\xb7\x8bi\xc6et\x98\nqS\xa7\x9f\x043\x86\x82\xdc\x8f%\xebZ\x04\xbbx\x8f\xebt\xc0H\xc7r\x91\xc47z\x89\xaa\xb9\x8b\xa4F\xb6ZF\x87]<\x9fZp\xb26\xb9\xa1\x9f\xe8\x9a\x1egB\x9f\x02:\x10\xf4)I)\x85|\x818\x1e,\xa1\xf5L\x1a\x1d\xb6X\xa6\x02=\xdf\xdb7\xe0[\x19\xc0PJ\n,:\x99\xc1\x1c\x8c\xf6F\x0c\xc6/\xce\xcb]\xc3\xa3\x9a\xf2\xacJ+\xa4\x9e\\\x94N\xca\xc5/%\xcc\x82W\xd0\xc8\xf8\xb3\x05\xce\x96hj\xec\xb3\xa7R2F\x96\x97g\xe7\x9e\xe3\x9c\x01q\xf8\xb9h\x14\xcfe\x95\xc7}\x86\x91\xaf\x899j#ca\x90\x99\xb3YX\x84\x05\x1b\x07\xb5\x1d\xa3"dh\xeb\xc5{Jm>\xacX\xc7q\xc3\x00\x84\x1f6\xd2r\xc1\xd2\x9cS\xc1\xb73\xa3I\x10$d\xfc6\xcd\\\x9c\xb3L\x08+5g\x8f~\xf6\xc4\x99[u`\x96%\x0b\x8b\x1c\xbcYWH\xf9<\xc3EX\x15\xe8\xbbq\xe5D\xd3\x8cH\x8c\xdaH#\xb7\nP\xcc9\xfa\xea\xc8\xc2\xbb\xbcn\x16\x1c]d\x1d\xe0e\xc1\xa5\xb9\xcd\xa70\x11\xb4<\xa6\xe4kb\xd5a\xa2b\xf4wo\xa5E\x8e\xd0Dh\xb6\xa3l\x90[;\xc0S\x82s#\xfbd:\xca\xb4\x0f6q4\x98\xe3/\x0fp\xb7s \x8cOi\xcd\x95\x87\x8cxe\xc0\xfd`\xa2\n\x0bN\x94\xe2\xa4\xc3\x01MC\xbcC\xa1\x07\xc6a\xd4@^c\x8c\xf19\xbeh\xec\xbd\x82\x96B\x90\xb85\xf8\xa7u#\xc9\n\xbbR7JSq\x19D\x083X\xc1\xc4pD\x16R\xbfG\xaa;\x04\xfb\t\xed\x08\x98*\x8a\xf8\xda\x06\x94D\nk\x88~m\xdb\xd0\xab{\xdb\x1aZ.W\x0c@%\xf6\x08'
RecieverPrivateKey = b'C\xd8R\x1e\xdb\xa9<$B\x1f\x14\x8e"4$\x13\xe5\xc3\x8b\x995li\n\x19\xb7V\x8cl\xae\xfe\xa9,\xd3\xb85\xed%\x0e\xb3:4\xfdRK\xb7\xd0~;\xfa\xa9%\xf4\xb6\xc3\xc2\x97\x1e\x95\xad\xb0\xdb\x95\xbb4\xc4\x0e%~v\xcc5\xdc\xdaJ\xbc\x0c[\x91\xc0\x8aL\xbci\xee)qw\x83\x80\xc4\xec^A\x83t\x97\xf8I3\x1b\xb9D\x83\x14j\xc7\xae\x86\xcck\x19\x9a\xc4\x0e\xab\xbf4"\xc9K\x86\xb7\x8d\'q\xe9\x92!\x9a\x99s\xd8\xa1 \xa0X{y\x81a,\x9bo\x12\t+\xcd\xf4!\x0feT\x8ev\xc7\x8fY\x08\x0b\xa0F1UG3QDK\x96\xa8\xb1G\xb8\x9a\x87\x94\x11\x12\xc6-\xc6\xa7 \xdb\xa1\xacE\xa76\xb1X\xaaq\x90Nk\xc4\x91\xb9\xb5\x8ffM\xbc0(6\xa00ou\x90\xb2\xe6\x99}XTW\xf0\x14o\xfcJ\x182\xa6t\xd7;\xe0\xc8\x88\x96\x96\xc6\x0b\xc6\n\xfe\xb0xR\xa1m\xe2Y\x7f\xdfa\xa0\xefZ,\xe4\\\x96%\xf0\xb7k\xc54\xefDz\x91X!\t\xe8~A\xf3n\x8d\xd1;\xd4\n\\+\xf46\x11cV\xb9\xc8o\x10\x85\x9dc\xccK\xb5k9$\xd2\x027\x1aOct\x13~\xd45\x9ev\x00\xe8\xd3\x80\xf1\xe3I:\xb9\x7f\x17qa\x00\xc4o]+)\xcd\\\x10\x9a\xf7\xbb\x85\x04r,8\x15s\xbaui(\x8cDyI\xdf\x11{gu\xbf1\x99\rMC\x04\xee\xcb\xa5\xbe\xc25i\xd8\x88\xd50\x87F\x15\x8b\x1b\xabZ\xfcyM(\xb0N\x9d\x14&\xe4\x11\x00?\xbc#\x8eAg\xb3\xa4r,\x8cg\xb86H\xb6\x1c+(\xd6\xbc\x81\x9c\r%\xd2"\xd6DP\xe3|[C\xeb\xbfw\xac\x1d\x80y"m\xd0`:&n\xb7\xa4T~<|\xb0\xa3\x99\x18e\rXyYkH\x8aVzm\xa6d\xc6\x9d\xc4\x07\x97\x94\xc4u\xbb\x96\xdc[\xbd-\xd7\nE\x83\x8e.\x07H\x80r)\x0c\xb1!\xb8\xaa\xa7\xf2\xc7v\xe08\x01\xcfl7P{XYC\x87:\x9b\xbd\xfb\x17\x89V\xa2\xcc\xb2\xcb\xa5B\x990\xf4\x18\x98\x048\x1d\xfe\xd9\xc9\x96\xf9\xc5\xdb\xe9B\xf8\x0bS\xf5\x96\xa5\xdf\x16\x00\x83))\xdd(it2\x88\x1ca&\xba\xeb[+\xf1\x1e\xb9\x9ak.\xbb\x8d\xed\xe7x3Rm\xf9\xd7H:\xa9-\x1f\x02\x05\xe8rn\xc7Z~\x8aG\x0cu\x14!E\xfb\xcd\xec\xd5\xc6p\x88\'\xeb\x11\t\x93L\x1d\xba!\xc4\xaea0\xa8\xc7^\xc3 \x9b\x0f 0\x05\x89C\xa4\xe4\xa8\x1f\xf4\x8a\x83@\x8bt\xcb\x08\x11\xe1g\xb0 \x1b6s@2[\xb1\xcd\xe5\xc8-\xf4\x0c\x98\xdc\x99v{w\xf7\xc2\xc3\xf0Al\x9c\'.\x0b\xecS\x07i\x8c|Z\xbb\x82\x10v\x8a\xe5d\x93\x84\xcd6\xa0x\xc8D\xb8,kCK{\x9b\xbd\x1cc\x9c2\x8b\x9c\x87\x11\x14q\x8e\x8a\xe1o\'\xd3\x8a\xbb\xe8g\x18k\x8b,K\x88:\x92O\xe8p\xbb\xaau\xa4\xe4\xb37\x81\n\xcb\xb3\x0c}YI\x97\xb3\xa5\x8b\x83\x075^\x0c\xb7\xd0\x94\x8aU\xa5EC,q\xe4\xb2a\xc0\xf3y\x1b\x1aJf\xe1\n\x17\x891\xb6\xb5*\x9e\x80\x14Key\xe1\xf7\x9cY\xd2\x8a\x08\xe3\x82]\xf6\xa9\xe9\xda\x91\xe5\xc7L\xf3\xb8\x85\xb5\x9a+\x1f\xf88K\xa1>\xc1\x8b-.\x17\x90\xedF\xc8\x08\xc5h&\x8c\x8a\xab\xe8\xc8\x93\x93\xa1l\xc4\xb8\x94\x8a\x80\xaa\xb1s\x1c\x04~\xb6\xa0\x8a\xc8x\x9dksg\xbb\xf3\x05\x1c\x12\xaf\x96\xb5\x89\xcf\xa1\x9bKQy\xf0\xd3\x87\xf7\xe32\xa4\xf6\xcbd\x893\xc6{#\x98(\x98\xa6lLU\xac\xb6d\xb3e\x00\x98,\x19\xb6ae\x06-\\\x96x\xcf\xebS\xe6@|\x85\xa5\x12>\x18}\xa9\x99\x82I\xbc\xb0\x83\xe7b\x8b\xa8Yu*\xbcEX\x84\x17\x86\x90{\xc2\xb6\xb4\xe9\x04,\x8a\x97K\xf3\x93\x85\xd7\x18\x07\xf3Y\xa6+\x16\x9c\xe8\x93\xc778$q\xb7\xae\xabtI\xfa8%\xc0^q\xd5\xc0\x86\xe6Q\x16Y<\x87\x13\x06[\xcb\x94?\xf4\xc4\xacF(\x0c\x10\x18`Hp\xf55\xc7\x19<\x9f\n\xa3\x08S\xfc_\xc2\x05\x9e\nd-\xea\x14\x8f\xe9s.\x9e\x87\xb2\xb6\x1a#@\xfa\x12\xed\x04\xcb\x8a\xb6\x0b\xe1\x1ca\x17\xa0\t\x04B\xc2\x1f\x96Uq\xdc\xc1\xf5\x85.\xfe\xd3\x92\x81\xc7\xbd\x97V6u3Z@\x93\x85\xd8|o\xe1\xd5\xa6\xb1\x10\x07X\x02\xab\xa7\x99,J\x10_7\xd7\xa1\x97\xc9\xb2\x18\xa3\x0fl\xbc\xc3Q\xd8\x0f\xb7\x8bi\xc6et\x98\nqS\xa7\x9f\x043\x86\x82\xdc\x8f%\xebZ\x04\xbbx\x8f\xebt\xc0H\xc7r\x91\xc47z\x89\xaa\xb9\x8b\xa4F\xb6ZF\x87]<\x9fZp\xb26\xb9\xa1\x9f\xe8\x9a\x1egB\x9f\x02:\x10\xf4)I)\x85|\x818\x1e,\xa1\xf5L\x1a\x1d\xb6X\xa6\x02=\xdf\xdb7\xe0[\x19\xc0PJ\n,:\x99\xc1\x1c\x8c\xf6F\x0c\xc6/\xce\xcb]\xc3\xa3\x9a\xf2\xacJ+\xa4\x9e\\\x94N\xca\xc5/%\xcc\x82W\xd0\xc8\xf8\xb3\x05\xce\x96hj\xec\xb3\xa7R2F\x96\x97g\xe7\x9e\xe3\x9c\x01q\xf8\xb9h\x14\xcfe\x95\xc7}\x86\x91\xaf\x899j#ca\x90\x99\xb3YX\x84\x05\x1b\x07\xb5\x1d\xa3"dh\xeb\xc5{Jm>\xacX\xc7q\xc3\x00\x84\x1f6\xd2r\xc1\xd2\x9cS\xc1\xb73\xa3I\x10$d\xfc6\xcd\\\x9c\xb3L\x08+5g\x8f~\xf6\xc4\x99[u`\x96%\x0b\x8b\x1c\xbcYWH\xf9<\xc3EX\x15\xe8\xbbq\xe5D\xd3\x8cH\x8c\xdaH#\xb7\nP\xcc9\xfa\xea\xc8\xc2\xbb\xbcn\x16\x1c]d\x1d\xe0e\xc1\xa5\xb9\xcd\xa70\x11\xb4<\xa6\xe4kb\xd5a\xa2b\xf4wo\xa5E\x8e\xd0Dh\xb6\xa3l\x90[;\xc0S\x82s#\xfbd:\xca\xb4\x0f6q4\x98\xe3/\x0fp\xb7s \x8cOi\xcd\x95\x87\x8cxe\xc0\xfd`\xa2\n\x0bN\x94\xe2\xa4\xc3\x01MC\xbcC\xa1\x07\xc6a\xd4@^c\x8c\xf19\xbeh\xec\xbd\x82\x96B\x90\xb85\xf8\xa7u#\xc9\n\xbbR7JSq\x19D\x083X\xc1\xc4pD\x16R\xbfG\xaa;\x04\xfb\t\xed\x08\x98*\x8a\xf8\xda\x06\x94D\nk\x88~m\xdb\xd0\xab{\xdb\x1aZ.W\x0c@%\xf6\x08v\x94\x95Fn\xa7\xa6(\xfd\x9b\x02\r\x8c\xf0\xe6\xae\x16\xc5\xdc\x823K\x89;\x18MJW2\xbf/\x04\xe7\xeci\xbfa\x9e\xa4\xf7z\xa0&\xca\xf0\xd4\xf9\xac#[\x0b\xe7\xb5\xc5\x084\xc4\xe2\xbc*\xc7\xe2\xf7\x98'

publicKeyLen = len(RecieverPublicKey)
privateKeyLen = len(RecieverPrivateKey)
blockSize = 1

def encrypt_wrapper(random_bytes_length):
	cipher, key = Kyber512.enc(RecieverPublicKey, random_bytes_length=random_bytes_length)
	return cipher, key

def decrypt_wrapper(ciphertext: bytes):
	key = Kyber512.dec(ciphertext, RecieverPrivateKey)
	return key


source_files = (__file__, "kyber/kyber.py")

if (HOST := os.getenv("RECEIVER")) is not None:
	HOST = os.getenv("RECEIVER")
	PORT = 8000

	random_bytes_length = int(os.getenv("PLAINTEXT"))
	P = cryterion.random_text(random_bytes_length)
	P = cryterion.pad(P, blockSize)
	Cipher, key = cryterion.encrypt(
                lambda plaintext: encrypt_wrapper(random_bytes_length),
                P,
                publicKeyLen,
                blockSize,
                cryterion.code_size_from_files(source_files),
        )
	
	cryterion.sendall(bytes(Cipher), HOST, PORT)
	print(f"\nCipher: {Cipher}...")
	print(f"\nKey: {key}...")

else:
	HOST = "0.0.0.0"
	PORT = 8000

	C = cryterion.recvall(HOST, PORT)
	print(C)
	key = cryterion.decrypt(
                lambda ciphertext: decrypt_wrapper(ciphertext),
                C,
                privateKeyLen,
                blockSize,
                cryterion.code_size_from_files(source_files),
	)

	print(f"\nKey: {key}...")

